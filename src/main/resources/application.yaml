spring:
  ## ---------- Redis begin --------- ##
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
  ## ---------- Redis end ----------- ##
  ## ---------- Postgres begin --------- ##
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${PG_HOST}:${PG_PORT}/${PG_DB}
    username: ${PG_USERNAME}
    password: ${PG_PASSWORD}
  ## ---------- Postgres end ----------- ##
server:
  port: 80
  ssl:
    enabled: ${SERVER_SSL_ENABLED}
    key-alias: ${SERVER_SSL_KEY_ALIAS}
    key-store: ${SERVER_SSL_KEY_STORE}
    key-store-password: ${SERVER_SSL_KEY_STORE_PASS}
    key-store-type: PKCS12
    protocol: TLS
    enabled-protocols: TLSv1.2
  tomcat:
    accesslog:
      enabled: true
      directory: ${HOME}/logs
      file-date-format: yyyy-MM-dd
      prefix: access_log
      suffix: .log
# --------- Telegram begin --------- #
telegram:
  bot:
    token: ${TG_BOT_TOKEN}
    webhook:
      enabled: ${TG_BOT_WEBHOOK_ENABLED}
      host: ${TG_BOT_HOST}
      certificate: ${TG_BOT_CERT}
      maxConnections: ${TG_BOT_MAX_CONNECTIONS}
# ---------- Telegram end ---------- #

#  PUT THIS ENVIRONMENT VARIABLES ON YOUR MACHINE
#
#  export TG_BOT_TOKEN=""
#  export TG_BOT_HOST=""
#  export TG_BOT_MAX_CONNECTIONS="100"
#  export PG_HOST="localhost"
#  export PG_PORT="5432"
#  export PG_DB=""
#  export PG_USERNAME=""
#  export PG_PASSWORD=""
#  export REDIS_HOST="localhost"
#  export REDIS_PORT="6379"
#  export SERVER_SSL_KEY_ALIAS=""
#  export SERVER_SSL_KEY_STORE=""
#  export SERVER_SSL_KEY_STORE_PASS=""